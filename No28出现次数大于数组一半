package NewCoder;

import java.util.HashMap;


/*
 * 数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。
 * 例如输入一个长度为9的数组{1,2,3,2,2,2,5,4,2}。
 * 由于数字2在数组中出现了5次，超过数组长度的一半，因此输出2。
 * 如果不存在则输出0。
 * 
 * 思路：用哈希表维护，到最后求出值大于length/2的关键字。
 */
public class No28 {
	public static void main(String[] args) {
		int[] array  = {1,2,3,2,2,2,5,4,2};
//		MoreThanHalfNum_Solution(array);
		System.out.println(MoreThanHalfNum_Solution(array));
	}
	public static int MoreThanHalfNum_Solution(int [] array) {
		HashMap<Integer,Integer> map = new HashMap<Integer,Integer>();
		for(int i = 0;i<array.length;i++){
			if(!map.containsKey(array[i])){
				map.put(array[i],1);
			}else{
				int count = map.get(array[i]).intValue();
				count=count+1;
				map.put(array[i], count);
			}
		}
		for(Integer key:map.keySet()){
			if(map.get(key).intValue()>array.length/2){
				return key.intValue();
			}
			
		}
		return 0;
	}
}
